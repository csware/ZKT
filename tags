!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
CONF_ALGO	zconf.c	42;"	d	file:
CONF_BOOL	zconf.c	41;"	d	file:
CONF_COMMENT	zconf.c	43;"	d	file:
CONF_END	zconf.c	37;"	d	file:
CONF_INT	zconf.c	39;"	d	file:
CONF_STRING	zconf.c	38;"	d	file:
CONF_TIMEINT	zconf.c	40;"	d	file:
ISCOMMENT	zconf.c	32;"	d	file:
ISDELIM	zconf.c	34;"	d	file:
ISTRUE	zconf.c	30;"	d	file:
KEYSET_FILE_PFX	dnssec-signer.c	575;"	d	file:
KeyWords	ncparse.c	/^static struct KeyWords {$/;"	s	file:
OFFSET	dnssec-signer.c	25;"	d	file:
TAINTEDCHARS	misc.c	27;"	d	file:
TOK_DELEGATION	ncparse.c	31;"	d	file:
TOK_DIR	ncparse.c	21;"	d	file:
TOK_FILE	ncparse.c	33;"	d	file:
TOK_FORWARD	ncparse.c	30;"	d	file:
TOK_HINT	ncparse.c	29;"	d	file:
TOK_INCLUDE	ncparse.c	22;"	d	file:
TOK_MASTER	ncparse.c	26;"	d	file:
TOK_SLAVE	ncparse.c	27;"	d	file:
TOK_STRING	ncparse.c	20;"	d	file:
TOK_STUB	ncparse.c	28;"	d	file:
TOK_TYPE	ncparse.c	25;"	d	file:
TOK_UNKNOWN	ncparse.c	35;"	d	file:
TOK_ZONE	ncparse.c	24;"	d	file:
a	domaincmp.c	/^         char    *a;$/;"	m	file:
add2zonelist	dnssec-signer.c	/^static	int	add2zonelist (const char *dir, const char *zone, const char *file)$/;"	f	file:
age2str	misc.c	/^char	*age2str (time_t sec)$/;"	f
ageflag	dnssec-zkt.c	/^int	ageflag = 0;$/;"	v
alg2buf	zktr.c	/^static	char	*alg2buf (char alg, char *buf, int *plen)$/;"	f	file:
b	domaincmp.c	/^         char    *b;$/;"	m	file:
bool2str	zconf.c	/^static	const char	*bool2str (int val)$/;"	f	file:
check_keydb_timestamp	dnssec-signer.c	/^static	int	check_keydb_timestamp (dki_t *keylist, time_t reftime)$/;"	f	file:
checkconfig	zconf.c	/^int	checkconfig (const zconf_t *z)$/;"	f
cmd2buf	zktr.c	/^static	char	*cmd2buf (char cmd, char *buf, int *plen)$/;"	f	file:
cmpfile	misc.c	/^int	cmpfile (const char *file1, const char *file2)$/;"	f
conf	zconf.c	/^static	zconf_para_t	conf[] = {$/;"	v	file:
config	dnssec-signer.c	/^static	zconf_t	*config;$/;"	v	file:
copyfile	misc.c	/^int	copyfile (const char *fromfile, const char *tofile)$/;"	f
create_parent_file	dnssec-zkt.c	/^static	int	create_parent_file (const char *fname, int phase, int ttl, const dki_t *dkp)$/;"	f	file:
createkey	dnssec-zkt.c	/^static	void	createkey (const char *keyname, const dki_t *list, const zconf_t *conf)$/;"	f	file:
def	zconf.c	/^static	zconf_t	def = {$/;"	v	file:
dirflag	dnssec-zkt.c	/^static	int	dirflag = 0;$/;"	v	file:
dki_add	dki.c	/^dki_t	*dki_add (dki_t **list, dki_t *new)$/;"	f
dki_age	dki.c	/^int	dki_age (const dki_t *dkp, time_t curr)$/;"	f
dki_algo2str	dki.c	/^char	*dki_algo2str (int algo)$/;"	f
dki_allcmp	dki.c	/^int	dki_allcmp (const dki_t *a, const dki_t *b)$/;"	f
dki_alloc	dki.c	/^static	dki_t	*dki_alloc ()$/;"	f	file:
dki_cmp	dki.c	/^int	dki_cmp (const dki_t *a, const dki_t *b)$/;"	f
dki_destroy	dki.c	/^dki_t	*dki_destroy (dki_t *dkp)$/;"	f
dki_estr	dki.c	/^static	char	dki_estr[255+1];$/;"	v	file:
dki_find	dki.c	/^const dki_t	*dki_find (const dki_t *list, int ksk, int status, int no)$/;"	f
dki_free	dki.c	/^void	dki_free (dki_t *dkp)$/;"	f
dki_freelist	dki.c	/^void	dki_freelist (dki_t **listp)$/;"	f
dki_geterrstr	dki.c	/^const	char	*dki_geterrstr ()$/;"	f
dki_isactive	dki.c	/^int	dki_isactive (const dki_t *dkp)$/;"	f
dki_isdepreciated	dki.c	/^int	dki_isdepreciated (const dki_t *dkp)$/;"	f
dki_isksk	dki.c	/^int	dki_isksk (const dki_t *dkp)$/;"	f
dki_ispublished	dki.c	/^int	dki_ispublished (const dki_t *dkp)$/;"	f
dki_namecmp	dki.c	/^int	dki_namecmp (const dki_t *a, const dki_t *b)$/;"	f
dki_new	dki.c	/^dki_t	*dki_new (const char *dir, const char *name, int ksk, int algo, int bitsize, const char *rfile)$/;"	f
dki_prt_comment	dki.c	/^int	dki_prt_comment (const dki_t *dkp, FILE *fp)$/;"	f
dki_prt_dnskey	dki.c	/^int	dki_prt_dnskey (const dki_t *dkp, FILE *fp)$/;"	f
dki_prt_dnskeyttl	dki.c	/^int	dki_prt_dnskeyttl (const dki_t *dkp, FILE *fp, int ttl)$/;"	f
dki_prt_trustedkey	dki.c	/^int	dki_prt_trustedkey (const dki_t *dkp, FILE *fp)$/;"	f
dki_read	dki.c	/^dki_t	*dki_read (const char *dirname, const char *filename)$/;"	f
dki_readdir	dki.c	/^int	dki_readdir (const char *dir, dki_t **listp, int recursive)$/;"	f
dki_readfile	dki.c	/^static	int	dki_readfile (FILE *fp, dki_t *dkp)$/;"	f	file:
dki_remove	dki.c	/^dki_t	*dki_remove (dki_t *dkp)$/;"	f
dki_search	dki.c	/^const dki_t	*dki_search (const dki_t *list, int tag, const char *name)$/;"	f
dki_setstat	dki.c	/^static	int	dki_setstat (dki_t *dkp, int status, int preserve_time)$/;"	f	file:
dki_setstatus	dki.c	/^int	dki_setstatus (dki_t *dkp, int status)$/;"	f
dki_setstatus_preservetime	dki.c	/^int	dki_setstatus_preservetime (dki_t *dkp, int status)$/;"	f
dki_status	dki.c	/^int	dki_status (const dki_t *dkp)$/;"	f
dki_statusstr	dki.c	/^const	char	*dki_statusstr (const dki_t *dkp)$/;"	f
dki_tadd	dki.c	/^dki_t	*dki_tadd (dki_t **tree, dki_t *new)$/;"	f
dki_tagcmp	dki.c	/^int	dki_tagcmp (const dki_t *a, const dki_t *b)$/;"	f
dki_tfree	dki.c	/^void	dki_tfree (dki_t **tree)$/;"	f
dki_time	dki.c	/^time_t	dki_time (const dki_t *dkp)$/;"	f
dki_timecmp	dki.c	/^int	dki_timecmp (const dki_t *a, const dki_t *b)$/;"	f
dki_tsearch	dki.c	/^const dki_t	*dki_tsearch (const dki_t *tree, int tag, const char *name)$/;"	f
domain2buf	zktr.c	/^static	char	*domain2buf (const char *domain, char *buf, int *plen)$/;"	f	file:
domaincmp	domaincmp.c	/^int     domaincmp (const char *a, const char *b)$/;"	f
dosigning	dnssec-signer.c	/^static	int	dosigning (zone_t *zp)$/;"	f	file:
error	misc.c	/^void error (char *fmt, ...)$/;"	f
ex	domaincmp.c	/^} ex[] = {$/;"	v	file:
extern	dki.c	20;"	d	file:
extern	dki.c	22;"	d	file:
extern	domaincmp.c	11;"	d	file:
extern	domaincmp.c	13;"	d	file:
extern	misc.c	23;"	d	file:
extern	misc.c	25;"	d	file:
extern	ncparse.c	14;"	d	file:
extern	ncparse.c	16;"	d	file:
extern	zconf.c	25;"	d	file:
extern	zconf.c	27;"	d	file:
extern	zkt.c	4;"	d	file:
extern	zkt.c	6;"	d	file:
extern	zone.c	21;"	d	file:
extern	zone.c	23;"	d	file:
fatal	misc.c	/^void fatal (char *fmt, ...)$/;"	f
file_age	misc.c	/^int	file_age (const char *fname)$/;"	f
fileexist	misc.c	/^int	fileexist (const char *name)$/;"	f
force	dnssec-signer.c	/^static	int	force = 0;$/;"	v	file:
genkey	dnssec-signer.c	/^static	dki_t	*genkey (dki_t **listp, const char *dir, const char *domain, int ksk, const zconf_t *conf, int status)$/;"	f	file:
get_mtime	misc.c	/^time_t	get_mtime (const char *fname)$/;"	f
get_parent_phase	dnssec-zkt.c	/^static	int	get_parent_phase (const char *file)$/;"	f	file:
gettok	ncparse.c	/^static	int	gettok (FILE *fp, char *val, size_t valsize)$/;"	f	file:
goto_labelstart	domaincmp.c	16;"	d	file:
headerflag	dnssec-zkt.c	/^int	headerflag = 1;$/;"	v
in_strarr	misc.c	/^int	in_strarr (const char *str, char *const arr[], int cnt)$/;"	f
incr_serial	misc.c	/^int	incr_serial (const char *fname)$/;"	f
incr_soa_serial	misc.c	/^static	int	incr_soa_serial (FILE *fp)$/;"	f	file:
is_directory	misc.c	/^int	is_directory (const char *name)$/;"	f
is_dotfile	misc.c	/^int	is_dotfile (const char *name)$/;"	f
is_keyfilename	misc.c	/^int	is_keyfilename (const char *name)$/;"	f
isblank	ncparse.c	18;"	d	file:
isinlist	strlist.c	/^int	isinlist (const char *str, const char *list)$/;"	f
ksk_rollover	dnssec-zkt.c	/^static	void	ksk_rollover (const char *keyname, int phase, const dki_t *list, const zconf_t *conf)$/;"	f	file:
kskdomain	dnssec-zkt.c	/^static	char	*kskdomain = "";$/;"	v	file:
kskflag	dnssec-zkt.c	/^int	kskflag = 1;$/;"	v
kskrollover	dnssec-zkt.c	/^static	int	kskrollover = 0;$/;"	v	file:
kskstatus	dnssec-signer.c	/^static	int	kskstatus (dki_t **listp, const char *dir, const char *domain, const zconf_t *z)$/;"	f	file:
kw	ncparse.c	/^} kw[] = {$/;"	v	file:
label	zconf.c	/^	char	*label;$/;"	m	file:
labellist	dnssec-zkt.c	/^char	*labellist = NULL;$/;"	v
linkfile	misc.c	/^int	linkfile (const char *fromfile, const char *tofile)$/;"	f
list_dnskey	zkt.c	/^static	void	list_dnskey (const dki_t **nodep, const VISIT which, int depth)$/;"	f	file:
list_key	zkt.c	/^static	void	list_key (const dki_t **nodep, const VISIT which, int depth)$/;"	f	file:
list_trustedkey	zkt.c	/^static	void	list_trustedkey (const dki_t **nodep, const VISIT which, int depth)$/;"	f	file:
ljustflag	dnssec-zkt.c	/^int	ljustflag = 0;$/;"	v
loadconfig	zconf.c	/^zconf_t	*loadconfig (char *filename, zconf_t *z)$/;"	f
logflush	misc.c	/^void logflush ()$/;"	f
logmesg	misc.c	/^void logmesg (char *fmt, ...)$/;"	f
long_options	dnssec-zkt.c	/^static struct option long_options[] = {$/;"	v	file:
main	dnssec-signer.c	/^main (int argc, char *const argv[])$/;"	f
main	dnssec-zkt.c	/^main (int argc, char *argv[])$/;"	f
main	domaincmp.c	/^main (int argc, char *argv[])$/;"	f
main	misc.c	/^main (int argc, char *argv[])$/;"	f
main	ncparse.c	/^main (int argc, char *argv[])$/;"	f
main	strlist.c	/^main (int argc, char *argv[])$/;"	f
name	ncparse.c	/^	char	*name;$/;"	m	struct:KeyWords	file:
new_keysetfiles	dnssec-signer.c	/^static	int	new_keysetfiles (const char *dir, time_t zone_signing_time)$/;"	f	file:
noexec	dnssec-signer.c	/^static	int	noexec = 0;$/;"	v	file:
origin	dnssec-signer.c	/^const	char	*origin = NULL;$/;"	v
parse_namedconf	ncparse.c	/^int	parse_namedconf (const char *filename, char *dir, size_t dirsize, int (*func) ())$/;"	f
parsedir	dnssec-signer.c	/^static	int	parsedir (const char *dir, zone_t **zp, const zconf_t *conf)$/;"	f	file:
parsedirectory	dnssec-zkt.c	/^static	int	parsedirectory (const char *dir, dki_t **listp)$/;"	f	file:
parsefile	dnssec-zkt.c	/^static	void	parsefile (const char *file, dki_t **listp)$/;"	f	file:
parsetag	dnssec-zkt.c	/^static	const char *parsetag (const char *str, int *tagp)$/;"	f	file:
parseurl	misc.c	/^void	parseurl (char *url, char **proto, char **host, char **port, char **para)$/;"	f
pathflag	dnssec-zkt.c	/^int	pathflag = 0;$/;"	v
pathname	misc.c	/^char	*pathname (char *path, size_t size, const char *dir, const char *file, const char *ext)$/;"	f
prepstrlist	strlist.c	/^char	*prepstrlist (const char *str, const char *delim)$/;"	f
printconfig	zconf.c	/^int	printconfig (const char *fname, const zconf_t *z)$/;"	f
printkeyinfo	zkt.c	/^static	void	printkeyinfo (const dki_t *dkp, const char *oldpath)$/;"	f	file:
printzone	ncparse.c	/^int	printzone (const char *dir, const char *zone, const char *file)$/;"	f
progname	dnssec-signer.c	/^const	char	*progname;$/;"	v
progname	dnssec-zkt.c	/^const	char	*progname;$/;"	v
progname	domaincmp.c	/^const char	*progname;$/;"	v
progname	misc.c	/^const char *progname;$/;"	v
progname	ncparse.c	/^char	*progname;$/;"	v
recflag	dnssec-zkt.c	/^static	int	recflag = RECURSIVE;$/;"	v	file:
register_key	dnssec-signer.c	/^static	int	register_key (dki_t *list, const zconf_t *z)$/;"	f	file:
reload_zone	dnssec-signer.c	/^static	int	reload_zone (const char *domain)$/;"	f	file:
reloadflag	dnssec-signer.c	/^static	int	reloadflag = 0;$/;"	v	file:
res	domaincmp.c	/^         int     res;$/;"	m	file:
searchitem	zkt.c	/^static	int	searchitem;$/;"	v	file:
searchkw	ncparse.c	/^static	int	searchkw (const char *keyword)$/;"	f	file:
searchresult	zkt.c	/^static	const	dki_t	*searchresult;$/;"	v	file:
send_zktr_v01	zktr.c	/^int	send_zktr_v01 (int fd, const char *domain, int tag, int algo, time_t epoch)$/;"	f
set_all_varptr	zconf.c	/^static	int set_all_varptr (zconf_t *cp)$/;"	f	file:
set_varptr	zconf.c	/^static	int set_varptr (char *entry, void *ptr)$/;"	f	file:
sign_zone	dnssec-signer.c	/^static	int	sign_zone (const char *dir, const char *domain, const char *file, const zconf_t *conf)$/;"	f	file:
splitpath	misc.c	/^const	char	*splitpath (char *path, size_t size, const char *filename)$/;"	f
start_timer	misc.c	/^time_t	start_timer ()$/;"	f
stop_timer	misc.c	/^time_t	stop_timer (time_t start)$/;"	f
str_delspace	misc.c	/^char	*str_delspace (char *s)$/;"	f
str_untaint	misc.c	/^char	*str_untaint (char *str)$/;"	f
strchop	misc.c	/^char	*strchop (char *str, char c)$/;"	f
tag2buf	zktr.c	/^static	char	*tag2buf (ushort tag, char *buf, int *plen)$/;"	f	file:
tag_search	zkt.c	/^static	void	tag_search (const dki_t **nodep, const VISIT which, int depth)$/;"	f	file:
time2buf	zktr.c	/^static	char	*time2buf (time_t time, char *buf, int *plen)$/;"	f	file:
time2str	misc.c	/^char	*time2str (time_t sec)$/;"	f
timeflag	dnssec-zkt.c	/^int	timeflag = 1;$/;"	v
timeint2str	zconf.c	/^static	const char	*timeint2str (ulong val)$/;"	f	file:
today_serialtime	misc.c	/^static	ulong	today_serialtime ()$/;"	f	file:
tok	ncparse.c	/^	int	tok;$/;"	m	struct:KeyWords	file:
tok2str	ncparse.c	/^static	const char	*tok2str (int  tok)$/;"	f	file:
touch	misc.c	/^int	touch (const char *fname, time_t sec)$/;"	f
trustedkeyflag	dnssec-zkt.c	/^static	int	trustedkeyflag = 0;$/;"	v	file:
type	zconf.c	/^	int	type;$/;"	m	file:
unprepstrlist	strlist.c	/^char	*unprepstrlist (char *list, char delimc)$/;"	f
usage	dnssec-signer.c	/^static	void	usage (char *mesg, zconf_t *conf)$/;"	f	file:
usage	dnssec-zkt.c	/^static	void    usage (char *mesg, zconf_t *cp)$/;"	f	file:
var	zconf.c	/^	void	*var;$/;"	m	file:
verbose	dnssec-signer.c	/^static	int	verbose = 0;$/;"	v	file:
writekeyfile	dnssec-signer.c	/^static	int	writekeyfile (const char *fname, const dki_t *list, int key_ttl)$/;"	f	file:
zconf_para_t	zconf.c	/^} zconf_para_t;$/;"	t	file:
zkt_list_dnskeys	zkt.c	/^void	zkt_list_dnskeys (const dki_t *data)$/;"	f
zkt_list_keys	zkt.c	/^void	zkt_list_keys (const dki_t *data)$/;"	f
zkt_list_trustedkeys	zkt.c	/^void	zkt_list_trustedkeys (const dki_t *data)$/;"	f
zkt_search	zkt.c	/^const	dki_t	*zkt_search (const dki_t *data, int searchtag, const char *keyname)$/;"	f
zktr2buf	zktr.c	/^int	zktr2buf (const zktr_t *z, char *buf, int len)$/;"	f
zktr_socket	zktr.c	/^int	zktr_socket (const char *host, const char *service, int af)$/;"	f
zone_add	zone.c	/^zone_t	*zone_add (zone_t **list, zone_t *new)$/;"	f
zone_alloc	zone.c	/^static	zone_t	*zone_alloc ()$/;"	f	file:
zone_cmp	zone.c	/^int	zone_cmp (const zone_t *a, const zone_t *b)$/;"	f
zone_estr	zone.c	/^static	char	zone_estr[255+1];$/;"	v	file:
zone_free	zone.c	/^void	zone_free (zone_t *zp)$/;"	f
zone_freelist	zone.c	/^void	zone_freelist (zone_t **listp)$/;"	f
zone_geterrstr	zone.c	/^const	char	*zone_geterrstr ()$/;"	f
zone_new	zone.c	/^zone_t	*zone_new (zone_t **zp, const char *zone, const char *dir, const char *file, const zconf_t *cp)$/;"	f
zone_print	zone.c	/^int	zone_print (const char *mesg, const zone_t *z)$/;"	f
zone_readdir	zone.c	/^int	zone_readdir (const char *dir, const char *zone, const char *zfile, zone_t **listp, const zconf_t *conf)$/;"	f
zone_search	zone.c	/^const zone_t	*zone_search (const zone_t *list, const char *zone)$/;"	f
zonelist	dnssec-signer.c	/^static	zone_t	*zonelist = NULL;	\/* must be static global because add2zonelist use it *\/$/;"	v	file:
zskflag	dnssec-zkt.c	/^int	zskflag = 1;$/;"	v
zskstatus	dnssec-signer.c	/^static	int	zskstatus (dki_t **listp, const char *dir, const char *domain, const zconf_t *z)$/;"	f	file:
